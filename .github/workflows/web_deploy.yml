name: web deploy
on:
  workflow_dispatch:

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: checkout depoly branch
        uses: actions/checkout@v4

      - name: get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: pipeline upload 'frontend build resource'
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: ./frontend/build


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: pipeline download 'frontend build resource'
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: ./frontend

      - name: ls root
        run: ls -al

      - name: ls frontent dir
        run: ls frontend -al

      - name: aws CLI credential Registration
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: s3 upload
        run: aws s3 sync ./frontend s3://${{ secrets.AWS_S3_BUCKET_NAME }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: CloudFront Invalidation
        env:
          CLOUD_FRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID}}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CLOUD_FRONT_ID --paths "/*"
